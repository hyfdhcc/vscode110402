Class %DeepSee.PMML.ModelInput Extends %DeepSee.PMML.Data [ Abstract, System = 4 ]
{

/// The name of the root <class>%DeepSee.PMML.Data</class> class for this PMML definition
Parameter DATACLASS As CLASSNAME;

/// The name of the <class>%DeepSee.PMML.Model.AbstractModel</class> for this PMML model
Parameter MODELCLASS As CLASSNAME;

/// The name of this model as defined in the PMML definition
Parameter MODELNAME As STRING;

/// Returns the usage types for all fields in this Mining Model
/// 		pArray(fieldName) = $lb(usageType, displayName)
ClassMethod %GetFields(Output pArray) As %Status [ Abstract ]
{
	// implementation generated by %DeepSee.PMML.Definition.%CreateClasses()
}

Method %OnNew(ByRef pData) As %Status [ Private, ServerOnly = 1 ]
{
	set tSC = $$$OK
	try {
		if $isobject($g(pData)) {
			set tSC = pData.%GetAsArray(.tData)
			quit:$$$ISERR(tSC)
			set tSC = ..%LoadData(.tData)
			quit:$$$ISERR(tSC)
		} elseif $d(pData)>1 {
			set tSC = ..%LoadData(.pData)
			quit:$$$ISERR(tSC)
		}
	} catch (ex) {
		set tSC = ex.AsStatus()
	}
	quit tSC
}

Storage Default
{
<Type>%Library.CacheSerialState</Type>
}

}
