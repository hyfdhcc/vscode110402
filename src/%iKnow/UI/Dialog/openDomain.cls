/// This class help users open the selected iKnow domain and text classifiers
Class %iKnow.UI.Dialog.openDomain Extends %ZEN.Dialog.finderDialog [ System = 4 ]
{

Parameter AUTONS As %Boolean = 1;

Parameter DOMAIN = "%iKnow";

/// Security requirement
Parameter RESOURCE = "%Development";

/// Provide the source data (as an array) that will drive the finder.
Method GetFinderArray(ByRef pParameters, Output pMetaData, Output pData) As %Status
{
	set tSC = $$$OK
	try {
		kill pData
		if (..mode="domain") {
			set pMetaData = $LB("name","value","type","date","caption")
			set tResult = ##class(%SQL.Statement).%ExecDirect(,"SELECT ID, Name, DefinitionClass FROM %iKnow.""Domain""")
			while tResult.%Next() {
				set tDomName = tResult.%Get("Name")
				continue:(..searchKey'="")&&'$find(tDomName,..searchKey)
				set pData($i(i)) = $lb(tDomName,tDomName,"domain","","")
			}
			set:$d(pData) pData = $$$Text("Domains")
		} elseif (..mode="domain:def") {
			set pMetaData = $LB("name","value","type","date","caption","description")
			set tResult = ##class(%SQL.Statement).%ExecDirect(,"SELECT ID, Name, DefinitionClass FROM %iKnow.""Domain""")
			while tResult.%Next() {
				set tDomName = tResult.%Get("Name")
				continue:(..searchKey'="")&&'$find(tDomName,..searchKey)
				set tDefClass = tResult.%Get("DefinitionClass")
				continue:tDefClass=""
				set pData(tDomName) = $lb(tDomName,tDefClass,"cls","",tDomName,tDefClass)
			}
			set:$d(pData) pData = $$$Text("Domains")
		} else {
			set tParms("sub") = ..mode
			set tParms("search") = ..searchKey
			set tSC = ##class(%ZEN.FinderUtils).%GetClassListArray(.tParms,.pMetaData,.pData)
			quit:$$$ISERR(tSC)
		}
		
	} catch (ex) {
		set tSC = ex.AsStatus()
	}
	quit tSC
}

/// Return the icon for the item in "icons" mode.
ClientMethod getItemIcon(item) [ Language = javascript ]
{
	if (null == item.children) {
		var icon = this.getDeepSeeIcon(item);
		if (icon) {
			return icon;
		}
	}
	return this.invokeSuper('getItemIcon',arguments);
}

/// Return the icon for a DeepSee item or null if this is not a DeepSee item.
ClientMethod getDeepSeeIcon(item) [ Language = javascript ]
{
	var icon = null;
	switch(item.type) {
	case 'cube':
		return 'deepsee/cube_48.gif';
	case 'subjectArea':
		return 'deepsee/cube_fav_48.gif';
	}
	return icon;
}

/// Provide HTML for details on selected item in finder.
ClientMethod drawDetails(item, finder, index) [ Language = javascript ]
{
	var html = new Array();
	var deepSee = false;

	switch (finder.viewType) {
	case 'columns':
		if (item && null == item.children) {
			var icon = this.getDeepSeeIcon(item);
			if (null == icon) {
				break;
			}

			deepSee = true;
			html[html.length] = '<div style="text-align:center; padding: 5px;">';
			var name = (item.value ? item.value : item.name);
			if (name) {
				html[html.length] = '<div style="font-weight:bold;" title="'+name+'">' + name + '</div>';
				html[html.length] = '<hr/>';
			}

			if (null == item._info) {
				// get more info from server
				item._info = this.GetItemInfo(item.type,item.value);
				item.description = item._info.description;
				item.cubeType = item._info.cubeType;
			}

			// check for overload of icon
			icon = item.icon ? item.icon : icon;
		
			html[html.length] = '<img alt="" src="' + icon + '"/></b><br/>';
			if (item.date) {
				html[html.length] = '<div style="color:#808080;font-weight:bold;">' + $$$Text('Last modified') + '</div>';
				html[html.length] = '<div style="color:#404040;font-size:11pt;">' + item.date + '</div><br/>';
			}

			if (item._info && ''!=item._info.generatedby) {
				html[html.length] = '<div style="color:#808080;font-weight:bold;">' + $$$Text('Generated by') + '</div>';
				html[html.length] = '<div style="padding:5px;"><a href="#" title="'+$$$Text('Open this class') + '" onclick="zenPage.openSuper(\''+item._info.generatedby+'\');return false;">' + item._info.generatedby + '</a></div>';
				html[html.length] = '<br/>';
			}

			if (item._info && item._info.superclass) {
				html[html.length] = '<div style="color:#808080;font-weight:bold;">' + $$$Text('Extends') + '</div>';
				var t = item._info.superclass.split(',');
				for (var n = 0; n < t.length; n++) {
					html[html.length] = '<div style="padding:5px;"><a href="#" title="'+$$$Text('Open this class') + '" onclick="zenPage.openSuper(\''+t[n]+'\');return false;">' + t[n] + '</a></div>';
				}
				html[html.length] = '<br/>';
			}

			if (item.cubeType && item.cubeType != '') {
				html[html.length] = '<div style="color:#808080;font-weight:bold;">' + $$$Text('Type') + '</div>';
				html[html.length] = '<div style="text-align:center;color:#404040;font-size:11pt;">' + item.cubeType + '</div>';
				html[html.length] = '<br/>';
			}

			var desc = item.description ? item.description : '';
			if (desc != '') {
				html[html.length] = '<div style="color:#808080;font-weight:bold;">' + $$$Text('Description') + '</div>';
				html[html.length] = '<div style="text-align:left;overflow:auto;height:160px;font-size:10pt;color:#404040;">' + desc + '</div>';
			}

			// command
			html[html.length] = '<hr/>';
			html[html.length] = '<a class="commandButton" href="#" onclick="zenPage.dialogFinish();return false;">'+$$$Text('Go')+'</a>' + '<br/>';
			html[html.length] = '</div>';
		}
		break;
	}	
	if (deepSee) {
		return html.join('');
	}

	return this.invokeSuper('drawDetails',arguments);
}

/// This callback, if defined, is called when the user presses the OK or Apply action buttons.
/// If this returns false, then the action is cancelled.<br>
ClientMethod ondialogFinish(action) As %Boolean [ Language = javascript ]
{
	try {
		//var value = this.getDialogValue();
	}
	catch(ex) {
		zenExceptionHandler(ex,arguments);
	}
	return true;
}

/// Add components to page.
Method %OnAfterCreatePage() As %Status
{
	Set tSC = ##super()
	If $$$ISERR(tSC) Quit tSC
	
	// define set of category tabs to display in lookout menu
	Set tLookout = ..%GetComponentById("lookout")

	Set tCat(1) = ""
	Set ..currCategory = ""

	// $LB(id,caption,help)
	if (..mode = "%iKnow.DomainDefinition")||(..mode="domain:def")
	{ 
		Set tCat(1) = $LB("domainDefs",$$$Text("iKnow"),$$$Text("Display iKnow Domain Definitions"))
		Set ..currCategory = "domainDefs"
	}
	Elseif ..mode = "%iKnow.Classification.Classifier"
	{
		Set tCat(1) = $LB("classifiers",$$$Text("iKnow"),$$$Text("Display iKnow Classifiers"))
		Set ..currCategory = "classifiers"
	}
	if (..mode = "domain")
	{ 
		Set tCat(1) = $LB("domains",$$$Text("iKnow"),$$$Text("Display iKnow Domains"))
		Set ..currCategory = "domains"
	}
	
	
	Set k = $O(tCat(""))
	While (k'="") {
		Set tTab = ##class(%ZEN.Component.tab).%New()
		Set tTab.caption = $LG(tCat(k),2)
		Set tTab.layout = "none"
		Set tTab.title = $LG(tCat(k),3)
		Do tLookout.%AddChild(tTab)

		Set tHTML = ##class(%ZEN.Component.html).%New()
		Set tHTML.enclosingClass = "category"
		Set tHTML.OnDrawContent = "DrawCategories"
		Set tHTML.seed = $LG(tCat(k),1) // passed to DrawCategories method
		Do tTab.%AddChild(tHTML)
		Set k = $O(tCat(k))
	}
	Quit $$$OK
}

/// Get information to display in the category box.
Method OnGetCategoryInfo(pCategory As %String, Output pDisplay As %Boolean, Output pIcons As %List) As %Status
{
	Set pDisplay = 1
	
	if pCategory = "domainDefs" {
		set pIcons(1) = $LB("domainDefs",$$$Text("Domain Definitions"),$$$Text("Show iKnow Domain Definitions"),"deepsee/cube_48.gif")
	} elseif pCategory = "domains" {
		set pIcons(1) = $LB("domains",$$$Text("domains"),$$$Text("Show iKnow Domains"),"deepsee/cube_48.gif")
	} elseif pCategory = "classifiers" {
		set pIcons(1) = $LB("classifiers",$$$Text("classifiers"),$$$Text("Show iKnow Text Classifiers"),"deepsee/cube_48.gif")
	}
	quit $$$OK
}

/// Zen page notification of an HTTP request.
ClassMethod %OnPreHTTP() As %Boolean [ Internal, ServerOnly = 1 ]
{
	// test if user has resources
	Set tPriv = 0
	Set tMode = $G(%request.Data("MODE",1))

	If ((tMode="domains")||
		(tMode="configurations")) {
		Set tPriv = 1
	}

	If ('tPriv) {
		Set tPriv = ##super()
	}
	If ('tPriv) {
		// test iKnow resources
		If ($System.Security.Check("%Developer","USE")
			) {
		Set tPriv = 1
		}
	}

	If ('tPriv) {
		Set %response.Redirect = ##class(%DeepSee.Utils).%GetErrorPageURL("Privilege")
	}
	Quit tPriv
}

/// Look up additional information for a given item.
ClassMethod GetItemInfo(pMode As %String, pItemName As %String, pItemCategory As %String = "") As %ZEN.proxyObject [ Internal, ZenMethod ]
{
	if (pMode = "domain:def")||(pMode = "%iKnow.DomainDefinition") {
		set tInfo = ##class(%ZEN.proxyObject).%New()
		try {
			set tDomainId = $classmethod(pItemName,"%GetDomainId")
			set tDomainName = $classmethod(pItemName,"%GetDomainName")
			set tInfo.generatedby = pItemName
			set tInfo.sourceCount = ##class(%iKnow.Queries.SourceAPI).GetCountByDomain(tDomainId)
			set tInfo.description = "<center>'"_tDomainName_"'<br/>"_tInfo.sourceCount_" sources</center>"
		} catch {}
		quit tInfo
	} else {
		set tInfo = ##super(pMode,pItemName,pItemCategory)
	}
	quit tInfo
}

Method %OnDrawHTMLHead() As %Status
{
	If $get(%session.Data("Ensemble","StudioSession",$namespace)) && ##class(%Library.EnsembleMgr).IsEnsembleNamespace() {
		Set tSC = ##class(EnsPortal.Template.base).%AddCSPShareHyperevents()
		If $$$ISERR(tSC) Quit tSC
		&html<<script type="text/javascript">
var useSharedHyperevents = true;
</script>>
	}
	Quit ##super()
}

/// Get information to display in the ribbon bar.
Method OnGetRibbonInfo(Output pDisplay As %Boolean, Output pViewIcons As %List, Output pSortOptions As %List, Output pSearchBox As %Boolean, Output pRibbonTitle As %String) As %Status
{
	Set pDisplay = 1
	Set pSearchBox = 1
	Set pRibbonTitle = $$$Text("Finder")

	Set pViewIcons(1) = $LB("columns",$$$Text("Show columns view"),"portal/view_box_columns.png")
	Set pViewIcons(2) = $LB("list",$$$Text("Show list view"),"portal/view_box_list.png")
	Set pViewIcons(3) = $LB("icons",$$$Text("Show icons view"),"portal/view_box_icons.png")

	Quit $$$OK
}

}
