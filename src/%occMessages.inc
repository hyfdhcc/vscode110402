ROUTINE %occMessages [Type=INC]
/// Format message text.
///   $$$FormatText(text, arg1, arg2, ...)
///   Arguments of the form %1, %2, etc. in the text argument will be replaced by macro arguments
///     that follow the text argument based on the order of these additional arguments.
#def1arg FormatText(%args) $$FormatText^%occMessages(%args)
/// Format message text and HTML escape output
///   $$$FormatTextHTML(text, arg1, arg2, ...)
///   Arguments of the form %1, %2, etc. in the text argument will be replaced by macro arguments
///     that follow the text argument based on the order of these additional arguments.
#def1arg FormatTextHTML(%args) $zcvt($$FormatText^%occMessages(%args),"O","HTML")
/// Format message text and JavaScript escape output
///   $$$FormatTextJS(text, arg1, arg2, ...)
///   Arguments of the form %1, %2, etc. in the text argument will be replaced by macro arguments
///     that follow the text argument based on the order of these additional arguments.
#def1arg FormatTextJS(%args) $zcvt($$FormatText^%occMessages(%args),"O","JS")
 
#; Get and format message text.
#;   Arguments of the form %1, %2, etc will be replaced by macro arguments
#;     that follow the %id argument.
#;   Language is optional and the current language is used if language is "" or not specified.  
#;   Language will be converted to lower case before being used.
#;   Domain can be a system domain beginning with % or a application domain. 
#;   Id is any message id.
#;   Default value will be used if no message is found for Id.
#; $$$FormatMessage(%language,%domain,%id,%default,%arg1,%arg2,....)
#def1arg FormatMessage(%args) $$FormatMessage^%occMessages(%args)
#; we usually don't care about the default language and string...
#; FormatMsg(%domain,%id,%arg1,%arg2,....)
#def1arg FormatMsg(%args) $$FormatMsg^%occMessages(%args)
 
#; Default language
#define DefaultLanguage $get(^%SYS("LANGUAGE","CURRENT"),"en")
#define DefaultLanguageNode ^%SYS("LANGUAGE","CURRENT")
 
#; Default Language for a session either user defined or CSP based.
#define SessionLanguage $s($mvv(58)="":"en",1:$mvv(58))
#define SessionLanguageNode $mvv(58)
 
#; Get the next message id
#;   Language is optional and the current language is used if language is "" or not specified.  
#;   Language will be converted to lower case before being used.
#;   Domain can be a system domain beginning with % or a application domain. 
#;   Id is any message id.  If Id="", the first id will be returned.
#define GetNextMessageId(%1language,%2domain,%3id) ##safeexpression($$macroGetNextMessageId^%occMsgXML(%literalargs))
 
#; Get any message text
#;   Language is optional and the current language is used if language is "" or not specified.  
#;   Language will be converted to lower case before being used.
#;   Domain can be a system domain beginning with % or a application domain. 
#;   Id is any message id.
#;   Default value will be used if no message is found for Id.
#define GetMessage(%1language,%2domain,%3id,%4default) ##safeexpression($$macroGetMessage^%occMsgXML(%literalargs))
#define GetSimpleMessage(%1domain,%2id) ##safeexpression($$macroGetSimpleMessage^%occMsgXML(%literalargs))
#define GetMsg $$$GetSimpleMessage 
#; Get system message text for the specified language.
#;   Language is the required language for the message text. 
#;   Domain can be an application domain and may not be a system domain.  
#;   Id is any message id.
#define GetSysMessage(%language,%domain,%id,%default) $get(^%qCacheMsg(%domain,%language,%id),%default)
 
#; Get application message text for the specified language.
#;   Language is the required language for the message text. 
#;   Language is expected to already be all lower case.
#;   Domain can be a system domain and may not be an application domain.  
#;   Id is any message id.
#define GetAppMessage(%language,%domain,%id,%default) $get(^CacheMsg(%domain,%language,%id),%default)
 
/// Get message text and save the message at compile time.
///   $$$Text(Text,Domain,Language)
///   Text is the text of the message to be created.  The text may optionally look
///     like "@<id>@<actual text>" where <id> is any id and <actual text> is the 
///     text of the message. The specified id is then used for the message. 
///     If @<id>@ is not specifed, then a new id is generated by using a 
///     32 bit CRC of the message text. 
///   Domain is a constant domain specified as a quoted string or integer and 
///     can be a system domain beginning with % or a application domain. 
///   Language is the optional run time language.  If not specified Language is $$$SessionLanguage.
///   When the first message for a domain is compiled, $$$DefaultLanguage at that time is associated
///   with the domain.  The compile time language for all messsages in that domain is then the compile
///   time language associated with the domain above which is the $$$DefaultLanguage value at the
///   time of the first compile for the domain.
#def1arg Text(%TextMacroArgList) ##safeexpression($$macroText^%occMessages(%literalargs))
/// Get message text and save the message at compile time and HTML escape output
///   $$$TextHTML(Text,Domain,Language)
///   Text is the text of the message to be created.  The text may optionally look
///     like "@<id>@<actual text>" where <id> is any id and <actual text> is the 
///     text of the message. The specified id is then used for the message.
///     If @<id>@ is not specifed, then a new id is generated by using a 
///     32 bit CRC of the message text. 
///   Domain is a constant domain specified as a quoted string or integer and 
///     can be a system domain beginning with % or a application domain. 
///   Language is the optional run time language.  If not specified Language is $$$SessionLanguage.
///   When the first message for a domain is compiled, $$$DefaultLanguage at that time is associated
///   with the domain.  The compile time language for all messsages in that domain is then the compile
///   time language associated with the domain above which is the $$$DefaultLanguage value at the
///   time of the first compile for the domain.
#def1arg TextHTML(%TextHTMLMacroArgList) $zcvt($$$Text(%TextHTMLMacroArgList),"O","HTML")
/// Get message text and save the message at compile time and JavaScript escape the output
///   $$$TextJS(Text,Domain,Language)
///   Text is the text of the message to be created.  The text may optionally look
///     like "@<id>@<actual text>" where <id> is any id and <actual text> is the 
///     text of the message. The specified id is then used for the message. 
///     If @<id>@ is not specifed, then a new id is generated by using a 
///     32 bit CRC of the message text. 
///   Domain is a constant domain specified as a quoted string or integer and 
///     can be a system domain beginning with % or a application domain. 
///   Language is the optional run time language.  If not specified Language is $$$SessionLanguage.
///   When the first message for a domain is compiled, $$$DefaultLanguage at that time is associated
///   with the domain.  The compile time language for all messsages in that domain is then the compile
///   time language associated with the domain above which is the $$$DefaultLanguage value at the
///   time of the first compile for the domain.
#def1arg TextJS(%args) $zcvt($$$Text(%args),"O","JS")
 
#; Check if a Message Dictionary exists.
#define MessageDictionaryExists(%language,%domain) $s($e(%domain)="%":$data(^%qCacheMsg(%domain,$s(%language'="":$zcvt(%language,"L"),1:$$$SessionLanguage))),1:$data(^CacheMsg(%domain,$s(%language'="":$zcvt(%language,"L"),1:$$$SessionLanguage))))
 
#; Convert Cache locale to RFC 1766 language
#define LocaleToLanguage(%locale) $case($zcvt($e(%locale,1,2),"U"),"CH":"zh","ZD":"ja","JP":"ja","PT":"pt-br",:$zcvt($e(%locale,1,2),"L"))
 
#; Convert Windows Language Name as returned for LOCALE_SABBREVLANGNAME to RFC 1766 language
#; This macro works for supported Cache locales.  
#; For Windows languages with no corresponding Cache locale, the default will be used.
#define WindowsLangNameToLanguage(%locale) $case($zcvt($e(%locale,1,2),"U"),"CH":"zh","JP":"ja","PT":"pt-br",:$zcvt($e(%locale,1,2),"L"))