ROUTINE %SYS.FILE [Type=INT]
%SYSFILE ;PTR ; LFT992 05/13/02LFT1320 11/01/04
 /*
 +--------------------------------------------------------+
 | Copyright 1986-2015 by InterSystems Corporation,       |
 | Cambridge, Massachusetts, U.S.A.                       |
 | All rights reserved.                                   |
 |                                                        |
 | Confidential, unpublished property of InterSystems.    |
 |                                                        |
 | This media contains an authorized copy or copies       |
 | of material copyrighted by InterSystems and is the     |
 | confidential, unpublished property of InterSystems.    |
 | This copyright notice and any other copyright notices  |
 | included in machine readable copies must be reproduced |
 | on all authorized copies.                              |
 +--------------------------------------------------------+
 */
 ;SETUP DIRNAM, DEND, NUMMAP, GD, RD
 ; EXIT: if DIRNAM="" then the user specified NO directory
DEFAULT ; Enter here to automatically select the process' default directory
 D DEF S %A=DIRNAM n big s big=$zbitget($zversion(0),21) G GET
INT ; ENTER HERE TO FORCE FEED A DIRECTORY NAME TO THIS ROUTINE IN DIRNAM
 S %A=DIRNAM n big s big=$zbitget($zversion(0),21) G GET
ASK ; Enter here to select any directory
 n big s big=$zbitget($zversion(0),21)
 s DIRNAM=$zu(12,"")
 New quit S %A=$$GetDir("Directory: ",DIRNAM,,.quit)
 If $Get(quit) S DIRNAM="" Q
 G GET:%A=""
 I %A["?" W !,"Enter valid directory name, or ^ to exit" G ASK
 S %A=$$ChkDirOrSpecEXISTS(%A) I %A="" W *7," invalid directory" G ASK
 I $$ZU49(%A)<-1 W *7," no such "_"CACHE"_".DAT" G ASK
 S $ZT="ERR",DIRNAM=%A D Touch(DIRNAM)
GET if $g(big) {
   n info 
   s info=$zu(49,DIRNAM)
   s DEND=$p(info,",",22),GD=$p(info,",",7)
 }
 else {
    N DIRINFO S DIRINFO=$$ZU49(DIRNAM)
    S NUMMAP=$P(DIRINFO,",",4),DEND=NUMMAP*400
    S GD=$P(DIRINFO,",",7),RD=$P(DIRINFO,",",9)
 }
 Q
ZU49(d) S $ZT="ZU49E" Q $ZU(49,d)
ZU49E Q -2 ;as if there were no CACHE.DAT
DEF S DIRNAM=$ZU(12,"") Q
ERR i ($zversion(1)=2) W *7," ??? Use Format DRIVE:\dir\subdir" 
 i ($zversion(1)=3) W *7," ??? Use Format /dir/subdir"
 i ($zversion(1)=1) W *7," ??? Use Format disk:[dir.subdir]"
 g ASK
STOP(x) S x=$$UC($E(x,1,4)) Q (x["EXIT")!(x["STOP")!(x["QUIT")!(x["HALT")!($E(x)="^")
UC(x) q $zcvt(x,"u")
GetDir(prompt,defdir,exists,quit) ;ask for a directory, allow defaults
GetDirLoop ; Loop until we get something valid or exit
 s $zt="GetDirE"
 n exist,dir,x
 s exist=+$g(exists,1) ; default is to check if exists
 w !,prompt_": "_$s($g(defdir)'="":$g(defdir)_" => ",1:"") r dir s:dir="" dir=$g(defdir)
 i $$STOP(dir) Set quit=1 Q ""
 i $E(dir)="?" Q dir ;pass-on request for elaboration
 q:exist<0 dir ;exist<0 means don't check valid or exists
 s x=$S(exist:$$ChkDirOrSpecEXISTS(dir),1:$$ChkDirVALID(dir)) 
 i x="" W *7,"  "_$s(exist:"Directory '"_dir_"' does not exist",1:"Invalid directory specification '"_dir_"'") G:exist GetDirLoop d  g:x="N" GetDirLoop
 . s x=$$YN("Use this directory anyway","N")
 i x="^" s quit=1 Quit ""
 q dir
GetDirE S $ZT=""
 i $ze["<INTERRUPT>" q ""
 w !,"Error: "_$ZE
 zquit 1 i $ZT'="" G @$ZT
 q ""
Touch(D)
 q
ChkDirVALID(R) S $ZE="",$ZT="ChkBad" q:R[":mirror:" R q $ZU(12,R,1)
ChkDirEXISTS(R) S $ZE="",$ZT="ChkBad" q:R[":mirror:" R q $ZU(12,R,2)
ChkDirOrSpecEXISTS(R) S $ZE="",$ZT="ChkBad" q:R[":mirror:" R q $ZU(12,R,3)
ChkDir(R) N N S $ZE="",$ZT="ChkBad" q:R[":mirror:" R q $ZU(12,R,2)
ChkBad S $ZT="" W !,"<"_$P($P($ZE,"<",2),">")_"> error -- invalid directory"
 Q ""
YN(P,D,t) N R,X S P=$G(P),D=$E($G(D)_"?"),t=$G(t) ;ask Yes/No w/ Prompt,Default
 S D=$S("Yy"[D:"Yes => ","Nn"[D:"No => ",1:"") ;Yes, No or no default
 F  W !,P_"? "_D Read:t R:t Read:'t R DO  I "^YN"[R Q  ;timed or non-timed read
 . S X=R,R=$TR($E(R_D_"?"),"yn","YN") I "^YN"'[R W "  enter Yes or No, please"
 S POP=(R="^") W $E($S(R="N":"No",R="Y":"Yes",1:""),$L(X)+1,3) Q R